/*
 * All work contained within is subject to copyright.
 * (c)2018 
 * no work may be reproduced without prior consent.
 * All Rights Reserved.
 */
package qd2;

import datechooser.beans.DateChooserDialog;
import java.awt.Color;
import java.awt.Toolkit;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.util.ArrayList;
import qd2.api.MyEvents;
import java.util.List;
import java.util.logging.Level;
import javax.swing.JComboBox;
import javax.swing.JTable;

import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableColumnModel;
import sun.security.jca.GetInstance.Instance;
import sx.blah.discord.api.IDiscordClient;
import sx.blah.discord.api.events.IListener;
import sx.blah.discord.handle.impl.events.guild.channel.message.MessageReceivedEvent;
import sx.blah.discord.handle.impl.obj.Guild;
import sx.blah.discord.handle.impl.obj.User;
import sx.blah.discord.handle.obj.IChannel;
import sx.blah.discord.handle.obj.IGuild;
import sx.blah.discord.handle.obj.IMessage;
import sx.blah.discord.handle.obj.IUser;

/**
 *
 * @author idiot
 */
public class start extends javax.swing.JFrame{

    
    public IDiscordClient cli = null;
    public IDiscordClient shrd = null;
    
    public boolean flag = false;                    // login flag, checks for username existance
    
    public Color amber = new Color(0xFAA61A);
    public Color green = new Color(0x43B581);
    public Color red = new Color(0xF04747);
    public Color lines = new Color(0x484B51);
    public Color text = new Color(0xBBBBA9);
    public Color darkBlue = new Color(0x2F3136);
    public Color text2 = new Color(0xB9C1BC);
    
    public List channelsList=null, messagesList=null, guildsList=null, usersList=null, refinedMessageList=null;
    private DefaultTableModel mModel;
    private DefaultTableModel qModel;
    public ArrayList<String> guildComboReply = null;
    public IGuild selectedGuild = null;
    public IUser selectedUser = null;
    public IChannel selectedChannel = null;
    public IMessage selectedMessage = null;
    
    
    
    /**
     * Creates new form start
     */
    public start() {
        
        initComponents();
        
        mssagesScroll.getViewport().setBackground(darkBlue);
        
        
        setupTables();
        listeners();                               // add table & combo listeners

        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        dateChooserDialog1 = new datechooser.beans.DateChooserDialog();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        loadPane = new javax.swing.JPanel();
        mssagesScroll = new javax.swing.JScrollPane();
        messageDisplay = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        guildLabel = new javax.swing.JLabel();
        channelLabel = new javax.swing.JLabel();
        channelCombo = new javax.swing.JComboBox<>();
        guildCombo = new javax.swing.JComboBox<>();
        exTextOnly = new javax.swing.JCheckBox();
        loadTables = new javax.swing.JButton();
        dateChooser = new javax.swing.JButton();
        wordSearch = new javax.swing.JTextField();
        wordSearchBut = new javax.swing.JButton();
        wordSearch1 = new javax.swing.JTextField();
        exTextOnly1 = new javax.swing.JCheckBox();
        exTextOnly2 = new javax.swing.JCheckBox();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        loginBut = new javax.swing.JButton();
        username = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        authorLabel = new javax.swing.JLabel();
        authorEdit = new javax.swing.JTextField();
        dateLabel1 = new javax.swing.JLabel();
        dateEdit1 = new javax.swing.JTextField();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        jLabel3 = new javax.swing.JLabel();
        fMessageScrool = new javax.swing.JScrollPane();
        fMessageDisplay = new javax.swing.JTextPane();
        QPostPane = new javax.swing.JPanel();
        QPostSroll = new javax.swing.JScrollPane();
        qPostList = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(47, 49, 54));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTabbedPane1.setToolTipText("First step");

        mssagesScroll.setBackground(new java.awt.Color(47, 49, 54));
        mssagesScroll.setEnabled(false);

        messageDisplay.setBackground(new java.awt.Color(47, 49, 54));
        messageDisplay.setEnabled(false);
        mssagesScroll.setViewportView(messageDisplay);

        jPanel2.setBackground(new java.awt.Color(47, 49, 54));
        jPanel2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jPanel2.setEnabled(false);

        jLabel2.setFont(new java.awt.Font("Franklin Gothic Medium Cond", 1, 20)); // NOI18N
        jLabel2.setText("Search for content...");

        guildLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        guildLabel.setText("Guild");
        guildLabel.setEnabled(false);

        channelLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        channelLabel.setText("Channel");
        channelLabel.setEnabled(false);

        channelCombo.setEnabled(false);

        guildCombo.setEnabled(false);

        exTextOnly.setBackground(new java.awt.Color(47, 49, 54));
        exTextOnly.setText("exc text only posts");

        loadTables.setText("Load Tables");
        loadTables.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadTablesActionPerformed(evt);
            }
        });

        dateChooser.setText("Choose Date");
        dateChooser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dateChooserActionPerformed(evt);
            }
        });

        wordSearchBut.setText("Word Search");
        wordSearchBut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                wordSearchButActionPerformed(evt);
            }
        });

        exTextOnly1.setBackground(new java.awt.Color(47, 49, 54));
        exTextOnly1.setText("containing this term");

        exTextOnly2.setBackground(new java.awt.Color(47, 49, 54));
        exTextOnly2.setText("from this date");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 210, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(exTextOnly, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(loadTables, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(exTextOnly1, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(wordSearchBut)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(exTextOnly2, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(dateChooser)
                                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addComponent(guildCombo, 0, 200, Short.MAX_VALUE)
                                                    .addComponent(guildLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(channelLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(channelCombo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                    .addComponent(wordSearch)
                                                    .addComponent(wordSearch1))))))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(guildLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(guildCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(channelLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(channelCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(exTextOnly)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(loadTables)
                .addGap(34, 34, 34)
                .addComponent(wordSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(exTextOnly1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(wordSearchBut)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addComponent(wordSearch1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(exTextOnly2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(dateChooser)
                .addGap(19, 19, 19))
        );

        jPanel1.setBackground(new java.awt.Color(47, 49, 54));
        jPanel1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jLabel1.setFont(new java.awt.Font("Franklin Gothic Medium Cond", 1, 20)); // NOI18N
        jLabel1.setText("Connect...");

        loginBut.setText("Log In");
        loginBut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginButActionPerformed(evt);
            }
        });

        username.setText("MrScabby");
        username.setToolTipText("Enter your online Username");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(username, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(loginBut, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(loginBut, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(username, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4.setBackground(new java.awt.Color(47, 49, 54));

        authorLabel.setText("Author:");

        dateLabel1.setText("Date:");

        jCheckBox1.setBackground(new java.awt.Color(47, 49, 54));
        jCheckBox1.setText("Embed");

        jCheckBox2.setBackground(new java.awt.Color(47, 49, 54));
        jCheckBox2.setText("Attachment");

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Icon");
        jLabel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(185, 193, 188)));

        fMessageDisplay.setBackground(new java.awt.Color(0, 0, 0));
        fMessageScrool.setViewportView(fMessageDisplay);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(fMessageScrool, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(60, 60, 60)
                                .addComponent(dateEdit1, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(dateLabel1)
                                    .addComponent(authorLabel))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(authorEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(31, 31, 31)
                                .addComponent(jCheckBox1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jCheckBox2)))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(14, 14, 14))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(authorLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(authorEdit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(dateLabel1)
                            .addComponent(dateEdit1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jCheckBox1)
                            .addComponent(jCheckBox2)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(fMessageScrool, javax.swing.GroupLayout.PREFERRED_SIZE, 317, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout loadPaneLayout = new javax.swing.GroupLayout(loadPane);
        loadPane.setLayout(loadPaneLayout);
        loadPaneLayout.setHorizontalGroup(
            loadPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(loadPaneLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(loadPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(loadPaneLayout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(mssagesScroll, javax.swing.GroupLayout.PREFERRED_SIZE, 557, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(117, Short.MAX_VALUE))
        );
        loadPaneLayout.setVerticalGroup(
            loadPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(loadPaneLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(13, 13, 13)
                .addGroup(loadPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(mssagesScroll)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(51, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Members Posts", loadPane);

        qPostList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        QPostSroll.setViewportView(qPostList);

        javax.swing.GroupLayout QPostPaneLayout = new javax.swing.GroupLayout(QPostPane);
        QPostPane.setLayout(QPostPaneLayout);
        QPostPaneLayout.setHorizontalGroup(
            QPostPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(QPostPaneLayout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(QPostSroll, javax.swing.GroupLayout.DEFAULT_SIZE, 743, Short.MAX_VALUE)
                .addGap(527, 527, 527))
        );
        QPostPaneLayout.setVerticalGroup(
            QPostPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(QPostPaneLayout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(QPostSroll, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(134, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Take Aim", QPostPane);

        getContentPane().add(jTabbedPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 60, 1310, 620));

        jPanel3.setBackground(new java.awt.Color(47, 49, 54));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1420, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 700, Short.MAX_VALUE)
        );

        getContentPane().add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1420, 700));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void loadTablesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadTablesActionPerformed

        String aString = channelCombo.getSelectedItem().toString();
        System.out.println("Selected=" + aString);
        List channels = cli.getChannels(); 
        for(int i = 0;i<channels.size();i++){
            IChannel aChan = (IChannel) channels.get(i);
            if (aChan.getName().equalsIgnoreCase(aString)) { selectedChannel = aChan; }
        }
        
        messagesList = selectedChannel.getMessageHistory(1000);
        setupMessagesTable();
        boolean hasEmbed = false, hasAttachment = false;
        for (int i = 0; i<messagesList.size(); i++ ) {
            IMessage m = (IMessage) messagesList.get(i);
            if(m.getEmbeds().size()>0) { hasEmbed = true; } else { hasEmbed = false; }
            if(m.getAttachments().size()>0) { hasAttachment = true; } else { hasAttachment = false; }
            
            if(exTextOnly.isSelected() && (hasEmbed || hasAttachment)) { insertRow(m,messageDisplay); } else {
                if(!exTextOnly.isSelected()) {  insertRow(m,messageDisplay); }
            }
            
        }
    }//GEN-LAST:event_loadTablesActionPerformed

    private void loginButActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginButActionPerformed

        String loginButStatus = loginBut.getText();

        if(loginButStatus.length()<1) { return; }

        cli = null;

        cli = BotUtils.getBuiltDiscordClient("NDI2NDU4OTAzODgzMDIyMzU2.DZWXBg.GqluTwQt5yJvVoQZPFuklaksbsw");

        cli.getDispatcher().registerListener(new IListener<MessageReceivedEvent>() {
            public void handle(MessageReceivedEvent event) {
                if(event.getMessage().getContent().startsWith(BotUtils.BOT_PREFIX + "test"))
                BotUtils.sendMessage(event.getChannel(), "I am sending a message from an IListener listener");
            }
        });

        cli.getDispatcher().registerListener(new MyEvents());

        cli.login();

        switchOnOff("on");

        while (cli.getGuilds().size()<1) { }        // wait till confirmed login\

        checkUserData();                          // combo population
        populateChannelsCombo("");
    }//GEN-LAST:event_loginButActionPerformed

    private void dateChooserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dateChooserActionPerformed
        DateChooserDialog p = new DateChooserDialog();
        p.showDialog(this);
    }//GEN-LAST:event_dateChooserActionPerformed

    private void wordSearchButActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_wordSearchButActionPerformed
        
        String word = wordSearch.getText();
        if (word.length()<1) { return; }
        
        messagesList = null;
        List channels = cli.getChannels();
        if(channels.size()<1) { return; }
        for(int i = 0;i<channels.size();i++) {
            IChannel channel = (IChannel) channels.get(i);
            String channelComboSelection = channelCombo.getSelectedItem().toString();
            if(channel.getName().equalsIgnoreCase(channelComboSelection)){
                messagesList = channel.getMessageHistory(1000);
            }
        }
        
        for(int i = 0;i<messagesList.size();i++){
            boolean match = false;
            IMessage m = (IMessage) messagesList.get(i);
            String text = m.getContent() + 
                    " " + m.getAuthor() + 
                    " " + m.getCreationDate() + 
                    " " + m.getMentions() + 
                    " " + m.getTimestamp();
            if(text.contains(word)) { refinedMessageList.add(m); }
        }
        messagesList = null; messagesList = refinedMessageList;
        
        if(messagesList!=null){
        setupMessagesTable();
        boolean hasEmbed = false, hasAttachment = false;
        for (int i = 0; i<messagesList.size(); i++ ) {
            IMessage m = (IMessage) messagesList.get(i);
            if(m.getEmbeds().size()>0) { hasEmbed = true; } else { hasEmbed = false; }
            if(m.getAttachments().size()>0) { hasAttachment = true; } else { hasAttachment = false; }
            
            if(exTextOnly.isSelected() && (hasEmbed || hasAttachment)) { insertRow(m,messageDisplay); } else {
                if(!exTextOnly.isSelected()) {  insertRow(m,messageDisplay); }
            }
            }
        } else { setupMessagesTable(); }
        
    }//GEN-LAST:event_wordSearchButActionPerformed

    private void checkUserData(){

        if(cli.isLoggedIn()) {
        
        try {
        
        guildsList = cli.getGuilds();
            for (int i = 0; i < guildsList.size(); i++) {
                
                Guild guild = (Guild) guildsList.get(i);
                insertCombo(guild.getName(), guildCombo);
            }
        
        usersList = cli.getUsers();String logInName = username.getText().trim();
        
        for(int i = 0;i<usersList.size();i++){
            IUser user = (User) usersList.get(i);
            if(logInName.matches(user.getName())) { flag = true; }
            
        }

        
       
        } catch (NullPointerException e) {
            
            java.util.logging.Logger.getLogger(start.class.getName()).log(Level.SEVERE, null, e);
            System.out.println("Null nay never NOT");
        }
        } else { return; }
    }
    
    private void insertRow(IMessage o, JTable j){
        
        mModel = (DefaultTableModel) j.getModel();
        
        mModel.insertRow(mModel.getRowCount(), new Object[] { false, o.getAuthor().getName(), o.getTimestamp().toString(), o.getContent() });
        
        j.setModel(mModel);
    }
    
    private void insertCombo(String line, JComboBox combo){
        
        combo.addItem(line);

    }
    
    private void setupTables(){
        
        mModel = (DefaultTableModel) messageDisplay.getModel();
        setupMessagesTable();
        
        messageDisplay.setModel(mModel);
        
        qModel = (DefaultTableModel) qPostList.getModel();
        
        String[] qcolumns={"use", "ID", "Date", "Text"};
        qModel.setColumnIdentifiers(qcolumns);
        
        qPostList.setModel(qModel);
        
        TableColumnModel qcolumnModel = qPostList.getColumnModel();
        qcolumnModel.getColumn(0).setPreferredWidth(50);
        qcolumnModel.getColumn(1).setPreferredWidth(100);
        qcolumnModel.getColumn(2).setPreferredWidth(280);
        qcolumnModel.getColumn(3).setPreferredWidth(400);
        
        qPostList.setColumnModel(qcolumnModel);
    }
    
    private void switchOnOff(String type){

        if (type.endsWith("on")){
            mssagesScroll.setEnabled(true);
            messageDisplay.setEnabled(true);
            loadTables.setEnabled(true);
            guildCombo.setEnabled(true);
            channelCombo.setEnabled(true);
            channelLabel.setEnabled(true);
            guildLabel.setEnabled(true);
        } else {
            mssagesScroll.setEnabled(false);
            messageDisplay.setEnabled(false);
            loadTables.setEnabled(false);
            guildCombo.setEnabled(true);
            channelCombo.setEnabled(true);
            channelLabel.setEnabled(true);
            guildLabel.setEnabled(true);
        }
    }       //redundent
    
    private DefaultTableModel setupMessagesTable(){
        
        Object[] columnNames = {"inc", "User", "Date", "Content"};
        Object[][] data = { {} };
        
        mModel = new DefaultTableModel(data, columnNames);
        JTableHeader header = messageDisplay.getTableHeader();
        header.setBackground(darkBlue);
        header.setForeground(text);
        messageDisplay.setGridColor(lines);
        messageDisplay.setRowHeight(20);
        
        messageDisplay.setModel(mModel);
        
        TableColumnModel columnModel = messageDisplay.getColumnModel();
        columnModel.getColumn(0).setPreferredWidth(50);
        columnModel.getColumn(1).setPreferredWidth(120);
        columnModel.getColumn(2).setPreferredWidth(190);
        columnModel.getColumn(3).setPreferredWidth(350);
        messageDisplay.setColumnModel(columnModel);
        return mModel;
    }
    
    private void listeners() {

        java.awt.Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        this.setSize(screenSize.width, screenSize.height);
        
            guildCombo.addItemListener(new ItemListener(){
            @Override
            public void itemStateChanged(ItemEvent e){
               if(e.getStateChange() == ItemEvent.SELECTED){
                  JComboBox localCombo = (JComboBox)e.getSource();
                   String result = localCombo.getSelectedItem().toString();
                   if (result.length()>0) { populateChannelsCombo(result); }
               }  
            }
        });
        
    }
    
    public void populateChannelsCombo(String guild){
        
        channelsList = null;guildsList = null;                     // dual purpose - if match made for item selected or
        guildsList = cli.getGuilds();                              // if match = "" = if we are at selected or none selected
        
        for(int i = 0;i<guildsList.size();i++){ 
            IGuild aGuild = (IGuild) guildsList.get(i);
            if (aGuild.getName().equals(guild)) {
                selectedGuild = aGuild;
                channelsList = aGuild.getChannels();
            }}
        
            if(channelsList!=null) {
                channelCombo.removeAll();
                for(int i = 0;i<channelsList.size();i++){
                    IChannel aChannel = (IChannel) channelsList.get(i);
                    if (i<1) { selectedChannel = aChannel; }
                    insertCombo(aChannel.getName(),channelCombo);
        }
        }
    }
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(start.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(start.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(start.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(start.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            
           
            public void run() {
                 
                
                try {
                    UIManager.setLookAndFeel("com.bulenkov.darcula.DarculaLaf");
                    
                    
                    new start().setVisible(true);
                } catch (ClassNotFoundException ex) {
                    java.util.logging.Logger.getLogger(start.class.getName()).log(Level.SEVERE, null, ex);
                } catch (InstantiationException ex) {
                    java.util.logging.Logger.getLogger(start.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IllegalAccessException ex) {
                    java.util.logging.Logger.getLogger(start.class.getName()).log(Level.SEVERE, null, ex);
                } catch (UnsupportedLookAndFeelException ex) {
                    java.util.logging.Logger.getLogger(start.class.getName()).log(Level.SEVERE, null, ex);
                }
                }
    });
                }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel QPostPane;
    private javax.swing.JScrollPane QPostSroll;
    private javax.swing.JTextField authorEdit;
    private javax.swing.JLabel authorLabel;
    private javax.swing.JComboBox<String> channelCombo;
    private javax.swing.JLabel channelLabel;
    private javax.swing.JButton dateChooser;
    private datechooser.beans.DateChooserDialog dateChooserDialog1;
    private javax.swing.JTextField dateEdit1;
    private javax.swing.JLabel dateLabel1;
    private javax.swing.JCheckBox exTextOnly;
    private javax.swing.JCheckBox exTextOnly1;
    private javax.swing.JCheckBox exTextOnly2;
    private javax.swing.JTextPane fMessageDisplay;
    private javax.swing.JScrollPane fMessageScrool;
    private javax.swing.JComboBox<String> guildCombo;
    private javax.swing.JLabel guildLabel;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JPanel loadPane;
    private javax.swing.JButton loadTables;
    private javax.swing.JButton loginBut;
    private javax.swing.JTable messageDisplay;
    private javax.swing.JScrollPane mssagesScroll;
    private java.awt.Panel panel1;
    private java.awt.Panel panel2;
    private java.awt.Panel panel3;
    private java.awt.Panel panel4;
    private javax.swing.JTable qPostList;
    private javax.swing.JTextField username;
    private javax.swing.JTextField wordSearch;
    private javax.swing.JTextField wordSearch1;
    private javax.swing.JButton wordSearchBut;
    // End of variables declaration//GEN-END:variables
}
